# Generated by Django 4.1.5 on 2023-02-08 11:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dataglen', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(help_text='The name of the event, should be unique', max_length=128)),
                ('event_category', models.CharField(help_text='The source of the event generation, such as data, gateway etc.', max_length=128)),
                ('applicable_to', models.CharField(blank=True, help_text='The entity to which this event is applicable, such as Inverter, Source, SolarPlant etc.', max_length=128)),
                ('description', models.CharField(max_length=200)),
            ],
            options={
                'unique_together': {('event_name', 'event_category', 'applicable_to')},
            },
        ),
        migrations.CreateModel(
            name='UserEventAlertsPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(help_text='Unique identifier of the entity (sourceKey, plant_slug)', max_length=128)),
                ('alert_active', models.BooleanField(default=False, help_text='Alerts for this event will be sent if this parameter is selected.')),
                ('email_id', models.EmailField(blank=True, help_text='Email address to which alerts will be sent', max_length=128)),
                ('phone_no', models.CharField(blank=True, default='', help_text='Phone number to which alerts will be sent', max_length=13)),
                ('alert_interval', models.IntegerField(default=180, help_text='Time interval after which the alert should be sent again.')),
                ('event', models.ForeignKey(help_text='An event with which the alert preference is related with.', on_delete=django.db.models.deletion.CASCADE, related_name='preferences', related_query_name='preference', to='events.events')),
            ],
            options={
                'unique_together': {('event', 'identifier', 'email_id', 'phone_no')},
            },
        ),
        migrations.CreateModel(
            name='EventsConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stream_name', models.CharField(help_text='The stream name (or ALL) for which the event needs to be configured', max_length=128)),
                ('condition_type', models.CharField(help_text='The condition_type for this event. It could be NO_DATA, DATA_STARTED etc.', max_length=128)),
                ('condition_operator', models.CharField(help_text='Operator on the stream condition. It would be ? when not applicable.', max_length=30)),
                ('condition_value', models.CharField(help_text='Value of the condition that need to be checked. It could be an absolute value or AVG, SUM, 2SD etc.', max_length=128)),
                ('event_type', models.CharField(help_text='The type of the event that should be raised. It could be NETWORK_DOWN etc.', max_length=128)),
                ('source_key', models.ForeignKey(help_text='The source key of the source', on_delete=django.db.models.deletion.CASCADE, related_name='eventsConfig', related_query_name='eventsConfig', to='dataglen.sensor', to_field='sourceKey')),
            ],
            options={
                'unique_together': {('source_key', 'stream_name', 'condition_type', 'condition_operator', 'condition_value')},
            },
        ),
        migrations.CreateModel(
            name='AlertManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(help_text='The unique identifier of the entity (plant_slug, sourceKey etc.)', max_length=128)),
                ('alert_time', models.DateTimeField(help_text='The time at which the alert was sent', max_length=128)),
                ('event_time', models.DateTimeField(help_text='The time at which event occurred', max_length=128)),
                ('email_id', models.EmailField(blank=True, help_text='An Email address to which the alert will be sent', max_length=128)),
                ('phone_no', models.CharField(blank=True, help_text='Phone number to which alerts will be sent', max_length=13)),
                ('event_code', models.CharField(default='-1', help_text='Code of the event occurred.', max_length=100)),
                ('event', models.ForeignKey(help_text='The event for which the alert will be sent', on_delete=django.db.models.deletion.CASCADE, related_name='alerts', related_query_name='alert', to='events.events')),
            ],
            options={
                'unique_together': {('identifier', 'alert_time', 'email_id', 'event_code')},
            },
        ),
    ]
