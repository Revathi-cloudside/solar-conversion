# Generated by Django 4.1.5 on 2023-02-09 04:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dashboards', '0001_initial'),
        ('solarrms', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AggregationFunction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function_id', models.IntegerField(db_index=True, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('aggregations', models.TextField(blank=True, null=True)),
                ('aggregation_key', models.CharField(blank=True, max_length=100, null=True)),
                ('post_aggregations', models.TextField(blank=True, null=True)),
                ('post_aggregation_key', models.CharField(blank=True, max_length=100, null=True)),
                ('data_key', models.CharField(max_length=100)),
                ('default_column_name', models.CharField(max_length=100)),
            ],
            options={
                'unique_together': {('name',)},
            },
        ),
        migrations.CreateModel(
            name='CssTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('css', models.TextField()),
                ('viz_type', models.CharField(choices=[('line', 'line'), ('column', 'column'), ('spline', 'spline'), ('area', 'area'), ('event', 'event'), ('boxplot', 'boxplot'), ('histogram', 'histogram'), ('scatter', 'scatter'), ('heatmap', 'heatmap'), ('geoheatmap', 'geoheatmap')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='DataAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Energy Export', 'Energy Export'), ('Performance Indicators', 'Performance Indicators'), ('Inverters', 'Inverters'), ('Meters', 'Meters'), ('Revenue', 'Revenue'), ('Weather Parameters', 'Weather Parameters'), ('Solar Custom', 'Custom')], max_length=100)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('system_defined', models.BooleanField(default=True)),
                ('admin_view', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('enable_admin_view', models.BooleanField(default=False)),
                ('enable_client_view', models.BooleanField(default=False)),
                ('operation_text', models.CharField(blank=True, max_length=5000, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('analysis_unit', models.CharField(blank=True, choices=[('kWh/m2', 'kWh/m2'), ('kW', 'kW'), ('kWh', 'kWh'), ('C', 'C'), ('kW/m2', 'kW/m2'), ('A', 'A'), ('V', 'V'), ('Hz', 'Hz'), ('%', '%'), ('s', 's'), ('km/hr', 'km/hr'), ('kWh/kWp', 'kWh/kWp'), ('INR', 'INR'), ('kg', 'kg'), (' ', ' ')], default=None, max_length=200, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_analysis', related_query_name='data_analysis', to=settings.AUTH_USER_MODEL)),
                ('dg_client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='data_analysis', related_query_name='data_analysis', to='dashboards.dataglenclient')),
            ],
        ),
        migrations.CreateModel(
            name='HavingClause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clause_id', models.IntegerField(db_index=True, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('having_clause', models.TextField(blank=True, null=True)),
                ('having_clause_key', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='QueryOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_id', models.IntegerField(db_index=True, unique=True)),
                ('data_family', models.CharField(choices=[('INVERTER', 'Inverter'), ('METER', 'Energy Meters'), ('PLANT', 'Plants'), ('PLANTMETA', 'Weather Parameters'), ('REVENUE', 'Revenue')], max_length=100)),
                ('display_name', models.CharField(max_length=200)),
                ('filter_column_name', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('filter_stream_name', models.CharField(max_length=200)),
                ('dimension', models.CharField(blank=True, choices=[('plant_slug', 'plant_slug'), ('source_key', 'source_key'), ('stream_name', 'stream_name')], default=None, max_length=200, null=True)),
                ('data_unit', models.CharField(blank=True, choices=[('kWh/m2', 'kWh/m2'), ('kW', 'kW'), ('kWh', 'kWh'), ('C', 'C'), ('kW/m2', 'kW/m2'), ('A', 'A'), ('V', 'V'), ('Hz', 'Hz'), ('%', '%'), ('s', 's'), ('km/hr', 'km/hr'), ('kWh/kWp', 'kWh/kWp'), ('INR', 'INR'), ('kg', 'kg'), (' ', ' ')], default=None, max_length=200, null=True)),
                ('query_type', models.CharField(blank=True, default='ENERGY', max_length=200, null=True)),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_queries', related_query_name='analysis_queries', to='dashboards.dashboard')),
                ('parent_query', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_query', related_query_name='child_query', to='dganalysis.queryoption')),
            ],
            options={
                'unique_together': {('dashboard', 'data_family', 'filter_stream_name', 'dimension', 'data_unit')},
            },
        ),
        migrations.CreateModel(
            name='DataSlice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_source', models.CharField(default='dgc_prod_warehouse', max_length=100)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('fixed_instantaneous_granularity', models.BooleanField(default=False)),
                ('instantaneous_minutes', models.IntegerField(default=15)),
                ('normalized', models.BooleanField(default=False)),
                ('multiplier', models.FloatField(default=1.0)),
                ('irradiation', models.CharField(blank=True, default='IRRADIATION', max_length=100, null=True)),
                ('granularity_origin', models.BooleanField(default=False)),
                ('ppa_multiplier', models.BooleanField(default=False)),
                ('analysis', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slices', related_query_name='slices', to='dganalysis.dataanalysis')),
                ('css_options', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='slice', related_query_name='slice', to='dganalysis.csstemplate')),
                ('daily_aggregation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_slices', related_query_name='daily_slices', to='dganalysis.aggregationfunction')),
                ('having_clauses', models.ManyToManyField(blank=True, null=True, related_name='slices', related_query_name='slices', to='dganalysis.havingclause')),
                ('instantaneous_aggregation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instantaneous_slices', related_query_name='instantaneous_slices', to='dganalysis.aggregationfunction')),
                ('monthly_aggregation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_slices', related_query_name='monthly_slices', to='dganalysis.aggregationfunction')),
                ('parent_slice', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_slice', related_query_name='child_slice', to='dganalysis.dataslice')),
                ('query_options', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slices', related_query_name='slices', to='dganalysis.queryoption')),
            ],
        ),
        migrations.CreateModel(
            name='AnalysisDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('editable_by_others', models.BooleanField(blank=True, default=False)),
                ('enabled_for_admins', models.BooleanField(blank=True, default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_dashboards', related_query_name='saved_dashboards', to=settings.AUTH_USER_MODEL)),
                ('css', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard', related_query_name='dashboard', to='dganalysis.csstemplate')),
            ],
        ),
        migrations.CreateModel(
            name='AnalysisConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('granularity', models.CharField(default='hour', max_length=100, null=True)),
                ('interval', models.CharField(default='live', max_length=100, null=True)),
                ('col', models.IntegerField()),
                ('row', models.IntegerField()),
                ('size_x', models.IntegerField()),
                ('size_y', models.IntegerField()),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_dashboards', related_query_name='saved_dashboards', to='dganalysis.dataanalysis')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_dashboards_analysis', related_query_name='saved_dashboards_analysis', to=settings.AUTH_USER_MODEL)),
                ('css', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analysis_configuration', related_query_name='analysis_configuration', to='dganalysis.csstemplate')),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_configurations', related_query_name='analysis_configurations', to='dganalysis.analysisdashboard')),
                ('plants', models.ManyToManyField(related_name='saved_dashboards', related_query_name='saved_dashboards', to='solarrms.solarplant')),
            ],
        ),
    ]
